<%
    import org.apache.commons.lang.StringEscapeUtils;
    import org.exoplatform.ecm.webui.component.explorer.versions.UIVersionInfo;
	import org.exoplatform.services.document.diff.Delta ;
    import org.exoplatform.social.core.identity.model.Identity;
    import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
    import org.exoplatform.social.webui.Utils;
    import org.exoplatform.web.application.Parameter;

    public String getProfileFullName(String userName) {
        String profileFullName = null;
        Identity identity = Utils.getIdentityManager().getOrCreateIdentity(OrganizationIdentityProvider.NAME,userName, true);
        profileFullName = identity.getProfile().getFullName();
        return profileFullName;
    }

    public String getProfileURL(String userName) {
        String profileUrl = null;
        Identity identity = Utils.getIdentityManager().getOrCreateIdentity(OrganizationIdentityProvider.NAME,userName, true);
        profileUrl = identity.getProfile().getUrl();
        return profileUrl;
    }

	def rcontext = _ctx.getRequestContext() ;
	def jm = rcontext.getJavascriptManager();

    String statusTitle = StringEscapeUtils.escapeJavaScript(_ctx.appRes("UserProfilePopup.label.Loading"));
    String connectLabel = StringEscapeUtils.escapeJavaScript(_ctx.appRes("UserProfilePopup.label.Connect"));
    String confirmLabel = StringEscapeUtils.escapeJavaScript(_ctx.appRes("UserProfilePopup.label.Confirm"));
    String cancelRequestLabel = StringEscapeUtils.escapeJavaScript(_ctx.appRes("UserProfilePopup.label.CancelRequest"));
    String removeConnectionLabel = StringEscapeUtils.escapeJavaScript(_ctx.appRes("UserProfilePopup.label.RemoveConnection"));
    String ignoreLabel = StringEscapeUtils.escapeJavaScript(_ctx.appRes("UserProfilePopup.label.Ignore"));

    String labels = """ {
    StatusTitle: '${statusTitle}',
    Connect: '${connectLabel}',
    Confirm: '${confirmLabel}',
    CancelRequest: '${cancelRequestLabel}',
    RemoveConnection: '${removeConnectionLabel}',
    Ignore: '${ignoreLabel}'
    } """;

    jm.require("SHARED/UIVersionInfo", "uiVersionInfo").addScripts("uiVersionInfo.initUserProfilePopup($labels);");
%>
<div class="uiDiff">
    <div class="headTitle">
        <div>
            <button class="btn" onclick="<%=uicomponent.event("CloseCompare")%>"><i class="uiIconEcmsGoBack"></i> <%=_ctx.appRes("UIDiff.label.backTo")%></button>
        </div>
        <div>
            <h5 class="title"><%=_ctx.appRes("UIDiff.label.diffTitle")%></h5>
        </div>
    </div>
			<div class="uiContentBox">
				<%
					def arr = uicomponent.getDeltas() ;					
					if(!uicomponent.isCompareable()) {											
				%>
				<div class="contentDetail">						
					<label><%=_ctx.appRes("UIDiff.label.can-not-compare")%></label>						
				</div>	
				<%
					} else {										
						String fromVersion = _ctx.appRes("UIDiff.label.compareVerion");
						String fromVersionName = uicomponent.getBaseVersionNum();
						fromVersion = fromVersion.replace("{0}", fromVersionName);
                        String fromVersionProfileURL = getProfileURL(uicomponent.getBaseVersionAuthor_());
						fromVersion = fromVersion.replace("{1}","<a class='userAvatarLink' href='$fromVersionProfileURL'>"+getProfileFullName(uicomponent.getBaseVersionAuthor_())+"</a>");
						String fromVersionDate = _ctx.appRes("UIDiff.label.DateChange");
						fromVersionDate = fromVersionDate.replace("{0}", uicomponent.getCurrentVersionDate());
                        String fromVersionSummary = "";
                        if (uicomponent.getBaseVersionLabels_().length > 0) {
                            fromVersionSummary = uicomponent.getBaseVersionLabels_()[0].replace("_"+fromVersionName,"");
                        }
                        String previousCompare = "";
                        String previousCompareLink = "";
                        Parameter[] parameters = new Parameter[2];
                        if(!"1".equals(fromVersionName)){
                            String previous = String.valueOf(Integer.valueOf(fromVersionName) - 1);
                            previousCompare = "&laquo; " + _ctx.appRes("UIDiff.label.PreviousAndNextCompare").replace("{0}", "<b>" + previous + "</b>").replace("{1}", "<b>" + fromVersionName + "</b>");
                            parameters[0] = new Parameter(uicomponent.FROM_PARAM, previous);
                            parameters[1] = new Parameter(uicomponent.TO_PARAM, fromVersionName);
                            previousCompareLink = uicomponent.event("Compare", null, parameters);
                        }

						String toVersion = _ctx.appRes("UIDiff.label.compareVerion");
						String toVersionName = uicomponent.getCurrentVersionNum();
						toVersion = toVersion.replace("{0}", toVersionName);
                        String toVersionProfileURL = getProfileURL(uicomponent.getVersionAuthor_());
						toVersion = toVersion.replace("{1}","<a class='userAvatarLink' href='$toVersionProfileURL'>"+getProfileFullName(uicomponent.getVersionAuthor_())+"</a>");
						String toVersionDate = _ctx.appRes("UIDiff.label.DateChange");
						toVersionDate = toVersionDate.replace("{0}", uicomponent.getBaseVersionDate());
                        String toVersionSummary = "";
                        if (uicomponent.getVersionLabels_().length > 0) {
                            toVersionSummary = uicomponent.getVersionLabels_()[0].replace("_"+toVersionName,"");
                        }
                        String nextCompareLink = "";
                        String nextCompare = "";
                        if(Integer.parseInt(toVersionName) != uicomponent.getParent().getChild(UIVersionInfo.class).getListVersion().size()){
                            String next = String.valueOf(Integer.valueOf(toVersionName) + 1);
                            nextCompare = _ctx.appRes("UIDiff.label.PreviousAndNextCompare").replace("{0}", "<b>" + toVersionName + "</b>").replace("{1}","<b>" + next + "</b>") + " &raquo;";
                            parameters[0] = new Parameter(uicomponent.FROM_PARAM, toVersionName);
                            parameters[1] = new Parameter(uicomponent.TO_PARAM, next);
                            nextCompareLink = uicomponent.event("Compare", null, parameters);
                        } else {
                            toVersionName = "Current";
                        }
					%>

					    <div class="uiBox pull-left hidden-phone">
                            <h6 class="title center">$fromVersion</h6>
                            <div class="boxVersionDetail">
                                <span>$fromVersionDate</span>
                                <span>$fromVersionSummary</span>
                                <a class="changes" href="$previousCompareLink"><%= previousCompare %></a>
                            </div>
					    </div>
                        <div class="pull-left visible-phone">
                            <a class="changes" href="$previousCompareLink"><%= previousCompare %></a>
                        </div>
                        <div class="uiBox pull-right hidden-phone">
                            <h6 class="title center">$toVersion</h6>
                            <div class="boxVersionDetail">
                                <span>$toVersionDate</span>
                                <span>$toVersionSummary</span>
                                <a class="changes" href="$nextCompareLink"><%= nextCompare %></a>
                            </div>
                        </div>
                        <div class="pull-right visible-phone">
                            <a class="changes" href="$nextCompareLink"><%= nextCompare %></a>
                        </div>

                        <div class="center comparedwith hidden-phone"><%=_ctx.appRes("UIDiff.label.ComparedWith")%></div>
                    <%
                        if(arr.isEmpty()) {
                    %>
                        <div class="contentDetail">
                            <div  class="contentEmpty">
                                <label> <%=_ctx.appRes("UIDiff.label.noChange")%> </label>
                            </div>
                        </div>
                    <%
                        } else {
                    %>
						<table class="uiGrid table table-hover table-striped">
						  <tbody>
						  <%  
						    def i=1;
						  	for(Delta delta in uicomponent.getDeltas()){
						  	  //jm.require("SHARED/ecm-utils", "ecmutil").addScripts("ecmutil.ECMUtils.insertContentToIframe('$i');") ;
			    		%>		    		
		    			<tr onload="eXo.ecm.ECMUtils.insertContentToIframe('$i') ;"> 
		    				<% 
		    					if (uicomponent.isDeleteDelta(delta)) {
		    				%>	   
		    				<td class="diffDelete">
		    				  <div id="original${i}" scrolling = "auto" style="border: 0px; height: 60px; width: 100%;overflow :auto; " content="<%=delta.getOriginal().toString()%>">
		    				    <%=delta.getOriginal().toString()%>
		    				  </div>
		    				</td>	 				
		    				<td class="diffEmpty">
		    				  <div id="revised${i}" scrolling = "auto" style="border: 0px; height: 60px; width: 100%;overflow :auto;" content="<%=delta.getRevised().toString()%>">
		    				    <%=delta.getRevised().toString()%>
		    				  </div>
		    				</td>	
		    				<% 
		    					} else if(uicomponent.isAddDelta(delta)) { 
		    				%>
		    				<td class="diffEmpty">
		    				  <div id="original${i}" scrolling = "auto" style="border: 0px; height: 60px; width: 100%;overflow :auto;" content="<%=delta.getOriginal().toString()%>">
		    				    <%=delta.getOriginal().toString()%>
		    				  </div>
		    				</td>
		    				<td class="diffAdd">
		    				  <div id="revised${i}" scrolling = "auto" style="border: 0px; height: 60px; width: 100%;overflow :auto;" content="<%=delta.getRevised().toString()%>">
		    				    <%=delta.getRevised().toString()%>
		    				  </div>
		    				</td>	
		    				<% 
		    					} else {	    		
		    				%>
		    				<td class="diffModify">
		    				  <div id="original${i}" scrolling = "auto" style="border: 0px; height: 60px; width: 100%;overflow :auto;" content="<%=delta.getOriginal().toString()%>">
		    				    <%=delta.getOriginal().toString()%>
		    				  </div>
		    			  </td>	
		    				<td class="diffModify">
		    				  <div id="revised${i}" scrolling = "auto" style="border: 0px; height: 60px; width: 100%;overflow :auto;" content="<%=delta.getRevised().toString()%>">
		    				    <%=delta.getRevised().toString()%>
		    				  </div>
		    				</td>
		    				<% } %>	    				
		    			</tr>
		    			<% 
						i++;		    			
		    			  } 
		    			%>
						</tbody>						
						</table>
					<% } } %>			    	
			</div>
</div>
